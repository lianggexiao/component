<?xml version="1.0" encoding="UTF-8" ?>
<!-- 从高到地低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->  
<!-- 日志输出规则  根据当前ROOT 级别，日志输出时，级别高于root默认的级别时  会输出 -->  
<!-- 以下  每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志--> 
<configuration>
	<!-- 定义日志文件 输入位置 -->  
    <property name="log_dir" value="c:/logs/tomcat" />  
    <!-- <property name="log_dir" value="/data/logs/tomcat" />   -->
    <!-- 日志最大的历史 30天 -->
    <property name="maxHistory" value="30"/>  
    <!-- property中的app.name 的 value要根据实际项目调整 -->
	<property name="app.name" value="minisys" />
	
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<!-- <encoding>UTF-8</encoding> -->
		<encoder>
			<pattern>%date [%X{reqId}] [%X{sessionId}] [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- <encoding>UTF-8</encoding> -->
		<!-- 过滤器，只记录xxx级别的日志 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
		</filter>
		<!-- 应用日志文件 -->
		<file>${log_dir}/${app.name}.log</file>
		<!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志输出位置  可相对、和绝对路径 -->
			<fileNamePattern>${log_dir}/${app.name}.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
			<!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6，
            则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件是，那些为了归档而创建的目录也会被删除-->
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%-20(%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{reqId}] [%X{sessionId}] [%thread] %-5level [%logger] ) - %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="webLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- <encoding>UTF-8</encoding> -->
		<!-- 过滤器，只记录xxx级别的日志 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
		</filter>
		<!-- 应用日志文件 -->
		<file>${log_dir}/${app.name}-weblog.log</file>
		<!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志输出位置  可相对、和绝对路径 -->
			<fileNamePattern>${log_dir}/${app.name}-weblog.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
			<!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6，
            则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件是，那些为了归档而创建的目录也会被删除-->
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%-20(%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{reqId}] [%X{sessionId}] [%thread] %-5level [%logger] ) - %msg%n</pattern>
		</encoder>
	</appender>

	<!--若是additivity设为false，则子Logger只会在自己的appender里输出，而不会在父Logger的appender里输出。-->
	<logger name="org.springframework" level="INFO" additivity="false" />
	<logger name="org.apache.http" level="INFO"  additivity="false" />

	<logger name="com.qing.minisys" level="INFO">
		<appender-ref ref="logfile" />
	</logger>

	<logger name="web_log" level="INFO" additivity="false">
		<appender-ref ref="webLogFile"/>
	</logger>

	<root level="info">
		<appender-ref ref="console" />
	</root>
</configuration>